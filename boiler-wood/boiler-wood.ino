/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
                                                               boiler-wood.ino 
                                        Copyright © 2018-2020, Zigfred & Nik.S
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\                            
05.12.2018 v1
06.12.2018 v2.0 add DS18B20
20.12.2018 v2.1 dell PT1000
23.12.2018 v2.2 PT100 nominalR = 220 om и 1 ком
24.12.2018 v2.3 flow sensor calc switch to pulses per second
24.12.2018 v2.4 повышение розрядности измерения PT100 и датчика давления
24.12.2018 v2.5 json structure updated
30.12.2018 v2.6 в json замена на ds18In, ds18Out, ds18FromTA
09.01.2019 v2.7 static int flowSensorPulsesPerSecond на unsigned long
04.02.2019 v3.0 добавлена функция freeRam()
06.02.2019 v3.1 добавлен префикс к переменным "boiler-wood-"
06.02.2019 v4.0 структура JSON без <ArduinoJson.h>
06.02.2019 v4.1 изменение вывода №№ DS18 и префикс заменен на "bw-"
14.02.2019 v4.2 заменен датчик PT100, откалиброван
02.03.2019 v4.3 add PT1000-smoke
06.03.2019 v4.4 add HX711 for PT100, dell PT1000 
10.03.2019 v5.0 время работы после включения
13.11.2019 v6.0 переход на статические IP
25.12.2019 v7.0 добавлено измерение угла заслонки на базе GY-521
02.01.2020 v8 Переход на блочно-модульное программирование 
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
  Arduino Pro Mini:
Скетч использует 22858 байт (74%) памяти устройства. Всего доступно 30720 байт.
Глобальные переменные используют 815 байт (39%) динамической памяти.
/*****************************************************************************\
 Сервер tt-server выдает данные: 
  аналоговые: 
    датчик давления (A0)
    датчик температуры PT100 (D5, D6 HX711)
  цифровые: 
    датчик скорости потока воды YF-B5(D2) (количество импульсов за 15 сек)
    датчики температуры DS18B20 (D9)
    ждатчик угла GY-521 (I2C A4, A5)
/*****************************************************************************/

#include <Ethernet2.h>
#include <OneWire.h>
#include <RBD_Timer.h>

//	Блок DEVICE  --------------------------------------------------------------
#define DEVICE_ID "boiler-wood"
#define VERSION 8
//	Блок httpServer	-----------------------------------------------------------
byte mac[] = {0xCA, 0x74, 0xC0, 0xFF, 0xBD, 0x01};
IPAddress ip(192, 168, 1, 111);
EthernetServer httpServer(40111); // Ethernet server
//	Блок DS18B20  -------------------------------------------------------------
#include <DallasTemperature.h>
#include "ds18b20_init.h"
//  Блок PRESSURE SENSOR  -----------------------------------------------------
#define PIN_PRESSURE_SENSOR A0
//  Блок YF-B5  ---------------------------------------------------------------
#include "yfb5_init.h"
//  Блок PT-100 на HX711  -----------------------------------------------------
#include <HX711.h>    //https://github.com/bogde/HX711
#include "hx711_pt100_init.h"
//  Блок GY-521 (MPU-6050)  ---------------------------------------------------
// I2Cdev and MPU6050 must be installed as libraries, or else the .cpp/.h files
// for both classes must be in the include path of your project
#include "I2Cdev.h"
#include "MPU6050.h"
#include "gy521_init.h"
//	Блок TIME  ----------------------------------------------------------------
#define RESET_UPTIME_TIME 43200000  //  = 30 * 24 * 60 * 60 * 1000 
// reset after 30 days uptime

//	end init  -----------------------------------------------------------------

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            setup
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void setup() {
  Serial.begin(9600);
  Serial.println("Serial.begin(9600)"); 

  Serial.print(F("FREE RAM: "));
  Serial.println(freeRam());
  
  setuphttpServer();
  setupYfb5Interrupt();
  setupDs18Sensors();
  setupHx711pt100();
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            loop
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void loop() {
  
  currentTime = millis();
  resetWhen30Days();

  realTimeService();
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            end
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/