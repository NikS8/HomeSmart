/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
                                                    boiler-down.ino
                             Copyright © 2018-2020, Zigfred & Nik.S
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\                            
31.12.2018 v1
03.01.2019 v1.1 откалиброваны коэфициенты трансформаторов тока
10.01.2019 v1.2 изменен расчет в YF-B5
11.01.2019 v1.3 переименование boiler6kw в boilerDown
23.01.2019 v2.0 добавлены ds18 ТА и в №№ ds18 только 2 знака 
28.01.2019 v2.1 переименование boilerDown в boiler-down
03.02.2019 v2.2 преобразование в формат  F("")
04.02.2019 v2.3 переменные с префиксом boiler-down-
04.02.2019 v3.0 структура вывода данных в базу в формате ("data: { }")
04.02.2019 v4.0 добавлена функция freeRam()
06.02.2019 v4.1 изменение вывода №№ DS18 и префикс заменен на "bd-"
10.02.2019 v4.2 удален intrevalLogService
10.02.2019 v5.0 добавлено измерение уровня воды (дальномер HC-SR04)
13.11.2019 v6.0 переход на статические IP
02.01.2020 v7 Переход на блочно-модульное программирование 
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
  Arduino Pro Mini:
Скетч использует 19752 байт (64%) памяти устройства.
Глобальные переменные используют 769 байт (37%) динамической памяти.
/*******************************************************************\
  Сервер boiler-down выдает данные:
    аналоговые: 
датчики трансформаторы тока (pins A1, A2, A3)
    цифровые:
датчик скорости потока воды YF-B5 (D2)(количество импульсов за 15 сек)
датчики температуры DS18B20 (OneWire pin D9)
дальномер HC-SR04 (D1, D3)(измерение уровня воды)
/*******************************************************************/

#include <Ethernet2.h>
#include <OneWire.h>
#include <RBD_Timer.h>

//	Блок DEVICE  ----------------------------------------------------
#define DEVICE_ID "boiler-down";
//String DEVICE_ID "boiler6kw";
#define VERSION 7
//	Блок httpServer	-------------------------------------------------
byte mac[] = {0xCA, 0x74, 0xBA, 0xCE, 0xBE, 0x01};
IPAddress ip(192, 168, 1, 102);
EthernetServer httpServer(40102); // Ethernet server
//	Блок EnergyMonitor	---------------------------------------------
#include "energy_monitor_init.h"
//	Блок DS18B20  ---------------------------------------------------
#include <DallasTemperature.h>
#include "ds18b20_init.h"
//	Блок YF-B5  -----------------------------------------------------
#include "yfb5_init.h"
//	Блок HC-SR04  ---------------------------------------------------
#include <hcsr04.h>
#define TRIG_PIN 1
#define ECHO_PIN 3
HCSR04 hcsr04(TRIG_PIN, ECHO_PIN, 30, 4000); // пределы: от и до
int taLevelWater;
//	Блок TIME  ------------------------------------------------------
#define RESET_UPTIME_TIME 43200000  //  = 30 * 24 * 60 * 60 * 1000 
// reset after 30 days uptime

//	end init  -------------------------------------------------------

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            setup
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void setup() {
  
  Serial.begin(9600);
  Serial.println("Serial.begin(9600)"); 
  
  Serial.print(F("FREE RAM: "));
  Serial.println(freeRam());
  
  setuphttpServer();
  setupYfb5Interrupt();
  setupDs18Sensors();
  setupCurrent();
  
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            loop
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void loop() {
  
  currentTime = millis();
  
  realTimeService();
  
  resetWhen30Days();

}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            end
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
