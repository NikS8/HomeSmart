<<<<<<< HEAD
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
                                                                 collector.ino
                                        Copyright © 2019-2020, Zigfred & Nik.S
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
31.01.2019 v1
18.02.2019 V1.1 Прерывания PCINT0_vect, PCINT1_vect и PCINT2_vect
25.02.2019 V1.2 dell PCINT0_vect, PCINT1_vect и PCINT2_vect
26.02.2019 V1.3 замена на #include <EnableInterrupt.h>
26.02.2019 V1.4 коллектор теплого пола:cf-cook,-office,-dorm,-corridor
27.02.2019 V2.0 add enableInterrupt(2,flowSensorPulseCounter2,FALLING)
28.02.2019 v2.1 переименование на collector, cf-hall-f, cf-hall-t ...
04.03.2019 v3.0 время работы
13.11.2019 v4.0 переход на статические IP
13.12.2019 v4.1 учет импульсов YF-B5 за каждые 15 сек
07.01.2020 v5 Переход на блочно-модульное программирование
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
  Arduino Nano:
Скетч использует 19434 байт (63%) памяти устройства. Всего доступно 30720 байт.
Глобальные переменные используют 592 байт (28%) динамической памяти.
/*****************************************************************************\
  Сервер kollektor выдает данные:
  цифровые:
датчики скорости потока воды YF-B5
датчики температуры DS18B20 (D9)
/*****************************************************************************/

#include <Ethernet2.h>
#include <OneWire.h>
#include <RBD_Timer.h>

//  Блок DEVICE  --------------------------------------------------------------
#define DEVICE_ID "collector"
#define VERSION 5

//  Блок httpServer -----------------------------------------------------------
byte mac[] = {0xCA, 0x74, 0xC0, 0xFF, 0xCF, 0x01};
IPAddress ip(192, 168, 1, 113);
EthernetServer httpServer(40113); // Ethernet server

//  Блок DS18B20  -------------------------------------------------------------
#include <DallasTemperature.h>
#include "ds18b20_init.h"

//  Блок YF-B5  ---------------------------------------------------------------
#include <EnableInterrupt.h>
#include "yfb5_init_cf.h"

//  Блок TIME  ----------------------------------------------------------------
#define RESET_UPTIME_TIME 43200000  //  = 30 * 24 * 60 * 60 * 1000 
// reset after 30 days uptime

//  end init  -----------------------------------------------------------------

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            setup
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void setup() {
  Serial.begin(9600);
  Serial.println("Serial.begin(9600)");

  Serial.print(F("FREE RAM: "));
  Serial.println(freeRam());

  setuphttpServer();
  setupDs18Sensors();
  setupYfb5Interrupt();

}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            loop
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
void loop() {
  
  realTimeService();
  
  resetWhen30Days();

}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*\
            end
\*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
=======

>>>>>>> 42a81b12608e97a7046a08fb09c3825c4ec3378d
